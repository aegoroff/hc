$hashName$ Калькулятор Readme 

$hashName$ калькулятор это простое консольное приложение позволяющее подсчитывать $hashName$ хэш для:
- Переданной через командную строку строчки
- Файла
- Всех файлов в указанном каталоге, включая вложенные каталоги (ключ -r)

Кроме того есть:

- Восстанавление исходной строки по её хэшу методом грубой силы (перебор по конечному словарю)
- Оценка времени восстановления строки с использованием грубой силы
- Поиск файла(ов) на диске по известному хэшу $hashName$

Поддерживается:

- Исключающая фильтрация файлов по маске (ключ -e)
- Включающая фильтрация файлов по маске (ключ -i)
- Обработка вложенных каталогов (ключ -r)
- Файлы больше 4 Гб
- Вычисление хэша для части файла с заданием размера части и смещения относительно начала файла
- Проверка файла с использованием известного хэша $hashName$ (валидация файла)
- Подсчет времени выполнения вычислений (ключ -t) для каждого файла
- Вывод суммы $hashName$ в разном регистре
- Сокращенная форма записи для символьных классов в словарях

Использование

$appName$ [OPTION] ...

Доступные опции:

-f [ --file ] <путь>                 Полный путь к файлу для которого нужно посчитать $hashName$
-d [ --dir ] <путь>	                 Полный путь к каталогу для файлов которого нужно посчитать $hashName$
-e [ --exclude ] <маска>             Маска (шаблон) файлов которые нужно исключать из обработки. 
                                     Можно указать несколько масок разделяя их точкой с запятой ";". Используется вместе с опцией -d (--dir)
-i [ --include ] <маска>             Маска (шаблон) файлов которые нужно обрабатывать (остальные обрабатываться не будут).
                                     Можно указать несколько масок разделяя их точкой с запятой ";". Используется вместе с опцией -d (--dir)
-s [ --string ] <строка>             Строка, для которой нужно подсчитать $hashName$
-m [ --$mOpt$ ] <$hashName$ хэш>$spaceCountMOpt$$hashName$ хэш по которому нужно либо проверить файл (задается с опцией -f) или 
                                     восстановить исходную строку (необходима опция -c)
-a [ --dict ] arg                    Словарь, по которому будет производиться восстановление строки по её хэшу. Для классов символов можно
                                     использовать сокращения. 0-9 все цифры, a-z латинские буквы в нижнем регистре, A-Z латинские буквы
                                     в верхнем регистре. Порядок символьных классов не имеет значения.
-n [ --min ] arg                     Минимальная длина строки для восстановления. По умолчанию 1
-x [ --max ] arg                     Максимальная длина строки для восстановления. По умолчанию 10
-z [ --limit ] arg                   Размер части файла в байтах для которой вычислять хэш.
                                     По умолчанию для всего файла
-q [ --offset ] arg                  Стартовая позиция в файле начиная с которой вычислять хэш. По умолчанию ноль
-h [ --search ] <$hashName$ хэш>$spaceCountSearchOpt$$hashName$ хэш для поиска файла соответствующего ему
-o [ --save ] arg                    сохранить $hashName$ хэши файлов в указанный файл.
-c [ --crack ]                       Восстановить указанный $hashName$ хэш (найти захэшированную строку) заданный опцией $appName$ (m)
-l [ --lower ]                       Выводить хэш в нижнем регистре
-r [ --recursively ]                 Сканировать вложенные каталоги
-t [ --time ]                        Показывать время вычисления $hashName$ (по умолчанию отключено)
-p [ --performance ]                 Тестирование производительности путем восстановления хэша строки 12345
-? [ --help ]                        Показать помощь


Примеры

Вычисление $hashName$ хэша строки 123

$appName$.exe -s 123


Вычисление $hashName$ хэша файла

$appName$.exe -f file.txt


Вычисление $hashName$ хэша части файла (первый килобайт)

$appName$.exe -f file.txt -z 1024


Вычисление $hashName$ хэша части файла (один килобайт с пропуском первых 512 байт)

$appName$.exe -f file.txt -z 1024 -q 512


Валидация файла по его хэшу

$appName$.exe -f file.txt -m $hashOfFile$


Вычисление $hashName$ хэша всех файлов каталога c:\dir

$appName$.exe -d c:\dir


Вычисление $hashName$ хэша всех файлов каталога c:\dir а также всех его подкаталогов

$appName$.exe -r -d c:\dir


Вычисление $hashName$ хэша всех exe файлов каталога c:\dir

$appName$.exe -d c:\dir -i *.exe


Вычисление $hashName$ хэша всех файлов каталога c:\dir кроме файлов с расширением tmp

$appName$.exe -d c:\dir -e *.tmp


Вычисление $hashName$ хэша всех exe и dll файлов каталога c:\dir

$appName$.exe -d c:\dir -i *.exe;*.dll


Вычисление $hashName$ хэша всех exe файлов каталога c:\dir исключая те из них, которые начинаются с bad

$appName$.exe -d c:\dir -i *.exe -e bad*


Поиск файла на диске C:\ по известному $hashName$ хэшу

$appName$.exe -d c:\ -r -h $hashOfFile$


Восстановление строки по её хэшу используя словарь по умолчанию

$appName$.exe -с -m $hashOf123$


Восстановление строки по её хэшу используя свой словарь

$appName$.exe -с -m $hashOf123$ -a 0123456789


Восстановление строки по её хэшу используя свой словарь в сокращенной форме (одни цифры)

$appName$.exe -с -m $hashOf123$ -a 0-9


Восстановление строки по её хэшу используя свой словарь в сокращенной форме (одни буквы в нижнем регистре)

$appName$.exe -с -m $hashOf123$ -a a-z


Восстановление строки по её хэшу используя свой словарь в сокращенной форме (цифры, буквы в нижнем и верхнем регистрах)

$appName$.exe -с -m $hashOf123$ -a 0-9a-zA-Z


Восстановление строки по её хэшу используя свой словарь и определенные длины строки

$appName$.exe -с -m $hashOf123$ -a 0123456789 -n 2 -x 6


Тестирование производительности с ипользованием словаря по умолчанию

$appName$.exe -p


Тестирование производительности используя свой словарь в сокращенной форме (одни цифры)

$appName$.exe -p -a 0-9
