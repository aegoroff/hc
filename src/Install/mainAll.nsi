; Script generated by the HM NIS Edit Script Wizard.

; HM NIS Edit Wizard helper defines
!define PRODUCT_NAME "Hash calculators"
!define PRODUCT_PUBLISHER "Egoroff"
!define PRODUCT_WEB_SITE "http://www.egoroff.spb.ru/"
!define PRODUCT_DIR_REGKEY_SHA1 "Software\Microsoft\Windows\CurrentVersion\App Paths\sha1.exe"
!define PRODUCT_DIR_REGKEY_SHA256 "Software\Microsoft\Windows\CurrentVersion\App Paths\sha256.exe"
!define PRODUCT_DIR_REGKEY_SHA384 "Software\Microsoft\Windows\CurrentVersion\App Paths\sha384.exe"
!define PRODUCT_DIR_REGKEY_SHA512 "Software\Microsoft\Windows\CurrentVersion\App Paths\sha512.exe"
!define PRODUCT_DIR_REGKEY_MD4 "Software\Microsoft\Windows\CurrentVersion\App Paths\md4.exe"
!define PRODUCT_DIR_REGKEY_MD5 "Software\Microsoft\Windows\CurrentVersion\App Paths\md5.exe"
!define PRODUCT_DIR_REGKEY_WHIRLPOOL "Software\Microsoft\Windows\CurrentVersion\App Paths\whirlpool.exe"
!define PRODUCT_UNINST_KEY "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"
!define PRODUCT_UNINST_ROOT_KEY HKLM

BrandingText "© 2009-2011 Alexander Egorov"
SetCompressor /SOLID lzma
SetCompressorDictSize 10
CRCCheck on
XPStyle on

; MUI 2.00 compatible ------
!include "MUI.nsh"
!include "x64.nsh"

Var product_edition

!include WordFunc.nsh
!insertmacro VersionCompare

!include LogicLib.nsh
;!include EnvVarUpdate.nsh

; MUI Settings / Header
!define MUI_HEADERIMAGE
!define MUI_HEADERIMAGE_RIGHT

; MUI Settings
!define MUI_ABORTWARNING

; Language Selection Dialog Settings
!define MUI_LANGDLL_REGISTRY_ROOT "${PRODUCT_UNINST_ROOT_KEY}"
!define MUI_LANGDLL_REGISTRY_KEY "${PRODUCT_UNINST_KEY}"
!define MUI_LANGDLL_REGISTRY_VALUENAME "NSIS:Language"

; Welcome page
!insertmacro MUI_PAGE_WELCOME
; License page
!insertmacro MUI_PAGE_LICENSE "..\..\docs\license.txt"
; Directory page
!define MUI_DIRECTORYPAGE_VERIFYONLEAVE
!insertmacro MUI_PAGE_DIRECTORY
; Instfiles page
!insertmacro MUI_PAGE_INSTFILES
; Finish page
!define MUI_FINISHPAGE_RUN_NOTCHECKED
!define MUI_FINISHPAGE_NOAUTOCLOSE
!insertmacro MUI_PAGE_FINISH

; Uninstaller pages
!insertmacro MUI_UNPAGE_INSTFILES

; Language files
!insertmacro MUI_LANGUAGE "English"
!insertmacro MUI_LANGUAGE "Russian"
!include "LanguageStrings.nsh"
!include "LanguageStringsAll.nsh"

; MUI end ------

Name "$(PROGRAM_NAME) ${PRODUCT_VERSION} $product_edition"
OutFile "${Configuration}\hashcalculators.exe"
InstallDir "$PROGRAMFILES\${PRODUCT_NAME}"
InstallDirRegKey HKLM "${PRODUCT_DIR_REGKEY_SHA1}" ""
InstallDirRegKey HKLM "${PRODUCT_DIR_REGKEY_SHA256}" ""
InstallDirRegKey HKLM "${PRODUCT_DIR_REGKEY_SHA384}" ""
InstallDirRegKey HKLM "${PRODUCT_DIR_REGKEY_SHA512}" ""
InstallDirRegKey HKLM "${PRODUCT_DIR_REGKEY_MD4}" ""
InstallDirRegKey HKLM "${PRODUCT_DIR_REGKEY_MD5}" ""
InstallDirRegKey HKLM "${PRODUCT_DIR_REGKEY_WHIRLPOOL}" ""
ShowInstDetails show
ShowUnInstDetails show

VIProductVersion "${PRODUCT_VERSION}"
VIAddVersionKey /LANG=${LANG_ENGLISH} "ProductName" "$(PROGRAM_NAME)"
VIAddVersionKey /LANG=${LANG_ENGLISH} "CompanyName" "${PRODUCT_PUBLISHER}"
VIAddVersionKey /LANG=${LANG_ENGLISH} "LegalCopyright" "© 2009-2011 Alexander Egorov"
VIAddVersionKey /LANG=${LANG_ENGLISH} "FileVersion" "${PRODUCT_VERSION}"
;Icon App.ico

Var /GLOBAL Upgrade

Function .onInit
  	${If} ${RunningX64}
		StrCpy $product_edition "x64"
	${Else}	
		StrCpy $product_edition "x86"
	${EndIf}
  !insertmacro MUI_LANGDLL_DISPLAY
	ReadRegStr $R0 ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayVersion"
	${VersionCompare} $R0 ${PRODUCT_VERSION} $1
        StrCpy $Upgrade "False" 5
        ${If} $1 == 2
                StrCpy $Upgrade "True" 4
                goto CheckOSVersion
	${EndIf}
        ${If} $1 == 1
                MessageBox MB_OK $(NEWER_VERSION_INSTALLED)
	        Abort
	${EndIf}
        ${If} $1 == 0
                MessageBox MB_OK $(SAME_VERSION_INSTALLED)
	        Abort
	${EndIf}
	goto CheckOSVersion
  CheckOSVersion:
        Call IsSupportedWindowsVersion
        Pop $R0
        StrCmp $R0 "True" NoAbort 0
	MessageBox MB_OK $(UNSUPPORTED_OS)
        Abort
   NoAbort:
FunctionEnd

Section "MainSection" SEC01
  SetOutPath "$INSTDIR"
  SetOverwrite try
  
  SetOutPath "$INSTDIR"
  ; Configuration must be defined in Compiler profiles!
	${If} ${RunningX64}  
		File "..\Binplace-x64\${Configuration}\sha1.exe"
		File "..\Binplace-x64\${Configuration}\sha256.exe"
		File "..\Binplace-x64\${Configuration}\sha384.exe"
		File "..\Binplace-x64\${Configuration}\sha512.exe"
		File "..\Binplace-x64\${Configuration}\md4.exe"
		File "..\Binplace-x64\${Configuration}\md5.exe"
		File "..\Binplace-x64\${Configuration}\whirlpool.exe"
	${Else}	
		File "..\Binplace-x86\${Configuration}\sha1.exe"
		File "..\Binplace-x86\${Configuration}\sha256.exe"
		File "..\Binplace-x86\${Configuration}\sha384.exe"
		File "..\Binplace-x86\${Configuration}\sha512.exe"
		File "..\Binplace-x86\${Configuration}\md4.exe"
		File "..\Binplace-x86\${Configuration}\md5.exe"
		File "..\Binplace-x86\${Configuration}\whirlpool.exe"
	${EndIf}

  File "..\..\docs\Readme.sha1.ru.txt"
  File "..\..\docs\Readme.sha1.en.txt"
  File "..\..\docs\Readme.sha256.ru.txt"
  File "..\..\docs\Readme.sha256.en.txt"
  File "..\..\docs\Readme.sha384.ru.txt"
  File "..\..\docs\Readme.sha384.en.txt"
  File "..\..\docs\Readme.sha512.ru.txt"
  File "..\..\docs\Readme.sha512.en.txt"
  File "..\..\docs\Readme.md4.ru.txt"
  File "..\..\docs\Readme.md4.en.txt"
  File "..\..\docs\Readme.md5.ru.txt"
  File "..\..\docs\Readme.md5.en.txt"
  File "..\..\docs\Readme.whirlpool.ru.txt"
  File "..\..\docs\Readme.whirlpool.en.txt"
  
  CreateDirectory "$SMPROGRAMS\$(PROGRAM_NAME)"
  CreateShortCut "$SMPROGRAMS\$(PROGRAM_NAME)\$(PROGRAM_NAME_SHA1).lnk" "cmd.exe" "/K sha1.exe"
  CreateShortCut "$SMPROGRAMS\$(PROGRAM_NAME)\$(PROGRAM_NAME_SHA256).lnk" "cmd.exe" "/K sha256.exe"
  CreateShortCut "$SMPROGRAMS\$(PROGRAM_NAME)\$(PROGRAM_NAME_SHA384).lnk" "cmd.exe" "/K sha384.exe"
  CreateShortCut "$SMPROGRAMS\$(PROGRAM_NAME)\$(PROGRAM_NAME_SHA512).lnk" "cmd.exe" "/K sha512.exe"
  CreateShortCut "$SMPROGRAMS\$(PROGRAM_NAME)\$(PROGRAM_NAME_MD4).lnk" "cmd.exe" "/K md4.exe"
  CreateShortCut "$SMPROGRAMS\$(PROGRAM_NAME)\$(PROGRAM_NAME_MD5).lnk" "cmd.exe" "/K md5.exe"
  CreateShortCut "$SMPROGRAMS\$(PROGRAM_NAME)\$(PROGRAM_NAME_WHIRLPOOL).lnk" "cmd.exe" "/K whirlpool.exe"
;  ${EnvVarUpdate} $0 "PATH" "A" "HKLM" "$INSTDIR" ; Append
SectionEnd

Section -AdditionalIcons
  WriteIniStr "$INSTDIR\${PRODUCT_NAME}.url" "InternetShortcut" "URL" "${PRODUCT_WEB_SITE}"
  CreateShortCut "$SMPROGRAMS\$(PROGRAM_NAME)\$(PROGRAM_SITE).lnk" "$INSTDIR\${PRODUCT_NAME}.url"
  CreateShortCut "$SMPROGRAMS\$(PROGRAM_NAME)\Readme MD4.lnk" "$INSTDIR\$(README_FILE_MD4)"
  CreateShortCut "$SMPROGRAMS\$(PROGRAM_NAME)\Readme MD5.lnk" "$INSTDIR\$(README_FILE_MD5)"
  CreateShortCut "$SMPROGRAMS\$(PROGRAM_NAME)\Readme SHA1.lnk" "$INSTDIR\$(README_FILE_SHA1)"
  CreateShortCut "$SMPROGRAMS\$(PROGRAM_NAME)\Readme SHA256.lnk" "$INSTDIR\$(README_FILE_SHA256)"
  CreateShortCut "$SMPROGRAMS\$(PROGRAM_NAME)\Readme SHA384.lnk" "$INSTDIR\$(README_FILE_SHA384)"
  CreateShortCut "$SMPROGRAMS\$(PROGRAM_NAME)\Readme SHA512.lnk" "$INSTDIR\$(README_FILE_SHA512)"
  CreateShortCut "$SMPROGRAMS\$(PROGRAM_NAME)\Readme WHIRLPOOL.lnk" "$INSTDIR\$(README_FILE_WHIRLPOOL)"
  CreateShortCut "$SMPROGRAMS\$(PROGRAM_NAME)\$(UNINSTALL).lnk" "$INSTDIR\uninst.exe"
SectionEnd

Section -Post
  WriteUninstaller "$INSTDIR\uninst.exe"
  WriteRegStr HKLM "${PRODUCT_DIR_REGKEY_SHA1}" "" "$INSTDIR\sha1.exe"
  WriteRegStr HKLM "${PRODUCT_DIR_REGKEY_SHA256}" "" "$INSTDIR\sha256.exe"
  WriteRegStr HKLM "${PRODUCT_DIR_REGKEY_SHA384}" "" "$INSTDIR\sha384.exe"
  WriteRegStr HKLM "${PRODUCT_DIR_REGKEY_SHA512}" "" "$INSTDIR\sha512.exe"
  WriteRegStr HKLM "${PRODUCT_DIR_REGKEY_MD4}" "" "$INSTDIR\md4.exe"
  WriteRegStr HKLM "${PRODUCT_DIR_REGKEY_MD5}" "" "$INSTDIR\md5.exe"
  WriteRegStr HKLM "${PRODUCT_DIR_REGKEY_WHIRLPOOL}" "" "$INSTDIR\whirlpool.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayName" "$(^Name)"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "UninstallString" "$INSTDIR\uninst.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayIcon" "$INSTDIR\sha1.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayIcon" "$INSTDIR\sha256.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayIcon" "$INSTDIR\sha384.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayIcon" "$INSTDIR\sha512.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayIcon" "$INSTDIR\md5.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayIcon" "$INSTDIR\md4.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayIcon" "$INSTDIR\whirlpool.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayVersion" "${PRODUCT_VERSION}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "URLInfoAbout" "${PRODUCT_WEB_SITE}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "Publisher" "${PRODUCT_PUBLISHER}"
SectionEnd


Function un.onUninstSuccess
  HideWindow
  MessageBox MB_ICONINFORMATION|MB_OK $(DELETE_CONFIRMATION)
FunctionEnd

Function un.onInit
!insertmacro MUI_UNGETLANGUAGE
  MessageBox MB_ICONQUESTION|MB_YESNO|MB_DEFBUTTON2 $(DELETE_ASK) IDYES +2
  Abort
FunctionEnd

Section Uninstall
  Delete "$INSTDIR\${PRODUCT_NAME}.url"
  Delete "$INSTDIR\uninst.exe"
  Delete "$INSTDIR\sha1.exe"
  Delete "$INSTDIR\sha256.exe"
  Delete "$INSTDIR\sha384.exe"
  Delete "$INSTDIR\sha512.exe"
  Delete "$INSTDIR\whirlpool.exe"
  Delete "$INSTDIR\md4.exe"
  Delete "$INSTDIR\md5.exe"
  Delete "$INSTDIR\Readme.md4.ru.txt"
  Delete "$INSTDIR\Readme.md4.en.txt"
  Delete "$INSTDIR\Readme.md5.ru.txt"
  Delete "$INSTDIR\Readme.md5.en.txt"
  Delete "$INSTDIR\Readme.sha1.ru.txt"
  Delete "$INSTDIR\Readme.sha1.en.txt"
  Delete "$INSTDIR\Readme.sha256.ru.txt"
  Delete "$INSTDIR\Readme.sha256.en.txt"
  Delete "$INSTDIR\Readme.sha384.ru.txt"
  Delete "$INSTDIR\Readme.sha384.en.txt"
  Delete "$INSTDIR\Readme.sha512.ru.txt"
  Delete "$INSTDIR\Readme.sha512.en.txt"
  Delete "$INSTDIR\Readme.whirlpool.ru.txt"
  Delete "$INSTDIR\Readme.whirlpool.en.txt"

;  ${un.EnvVarUpdate} $0 "PATH" "R" "HKLM" "$INSTDIR"      ; Remove path
  RMDir /r "$SMPROGRAMS\$(PROGRAM_NAME)"
  RMDir /r "$INSTDIR"

  DeleteRegKey ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}"
  DeleteRegKey HKLM "${PRODUCT_DIR_REGKEY_SHA1}"
  DeleteRegKey HKLM "${PRODUCT_DIR_REGKEY_SHA256}"
  DeleteRegKey HKLM "${PRODUCT_DIR_REGKEY_SHA384}"
  DeleteRegKey HKLM "${PRODUCT_DIR_REGKEY_SHA512}"
  DeleteRegKey HKLM "${PRODUCT_DIR_REGKEY_MD4}"
  DeleteRegKey HKLM "${PRODUCT_DIR_REGKEY_MD5}"
  DeleteRegKey HKLM "${PRODUCT_DIR_REGKEY_WHIRLPOOL}"
  
  SetAutoClose true
SectionEnd

; GetWindowsVersion, taken from NSIS help, modified for our purposes
Function IsSupportedWindowsVersion

   Push $R0
   Push $R1

   ClearErrors

   ReadRegStr $R0 HKLM "SOFTWARE\Microsoft\Windows NT\CurrentVersion" CurrentVersion
   IfErrors 0 lbl_winnt
   ; we are not NT
   ReadRegStr $R0 HKLM "SOFTWARE\Microsoft\Windows\CurrentVersion" VersionNumber

   StrCpy $R1 $R0 1

   StrCmp $R1 '4' 0 lbl_error

   StrCpy $R1 $R0 3

   StrCmp $R1 '4.0' lbl_win32_95
   StrCmp $R1 '4.9' lbl_win32_ME lbl_win32_98

   lbl_win32_95:
     StrCpy $R0 'False'
   Goto lbl_done

   lbl_win32_98:
     StrCpy $R0 'False'
   Goto lbl_done

   lbl_win32_ME:
     StrCpy $R0 'False'
   Goto lbl_done

   lbl_winnt:

   StrCpy $R1 $R0 1

   StrCmp $R1 '3' lbl_winnt_x
   StrCmp $R1 '4' lbl_winnt_x

   StrCpy $R1 $R0 3

   StrCmp $R1 '5.0' lbl_winnt_2000
   StrCmp $R1 '5.1' lbl_winnt_XP
   StrCmp $R1 '5.2' lbl_winnt_2003
   StrCmp $R1 '6.0' lbl_winnt_vista
   StrCmp $R1 '6.1' lbl_winnt_7

   lbl_winnt_x:
     StrCpy $R0 'True'
   Goto lbl_done

   lbl_winnt_2000:
     Strcpy $R0 'True'
   Goto lbl_done

   lbl_winnt_XP:
     Strcpy $R0 'True'
   Goto lbl_done

   lbl_winnt_2003:
     Strcpy $R0 'True'
   Goto lbl_done
   
   lbl_winnt_vista:
    Strcpy $R0 'True'
   Goto lbl_done
   
   lbl_winnt_7:
    Strcpy $R0 'True'
   Goto lbl_done

   lbl_error:
     Strcpy $R0 'False'
   lbl_done:

   Pop $R1
   Exch $R0

FunctionEnd